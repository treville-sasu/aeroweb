var aeroweb;aeroweb=(()=>{"use strict";var t={544:(t,e,A)=>{A.r(e),A.d(e,{default:()=>a});const r=XmlJS;var E=A.n(r);const a=class{constructor(t,e){this.key=t,this.url=e.url||new URL("FR/aviation/serveur_donnees.jsp","https://aviation.meteo.fr"),this.prefetch=e.prefetch,this.parser=e.parser||(t=>E().xml2js(t,{compact:!0,ignoreDeclaration:!0}))}async OPMET(t){const e=await this.aerofetch("OPMET2",this.prepareCodes(t));return e.root?this.sanitizeStations(e.root.opmet):[]}async SIGMET(t){const e=await this.aerofetch("SIGMET2",this.prepareCodes(t));return e.root?this.sanitizeStations(e.root.FIR):[]}async VAA(t){const e=await this.aerofetch("VAA",this.prepareCodes(t));return this.groupByMessage(e)}async VAG(t){const e=await this.aerofetch("VAG",this.prepareCodes(t));return this.flattenMaps(e)}async TCA(t){const e=await this.aerofetch("TCA",this.prepareCodes(t));return this.groupByMessage(e)}async TCAG(t){const e=this.aerofetch("TCAG",this.prepareCodes(t));return this.flattenMaps(e)}async MAA(t){return await this.aerofetch("MAA",this.prepareCodes(t))}async PREDEC(t){return await this.aerofetch("PREDEC",this.prepareCodes(t))}async CARTES(t,e,A){let r={};t||e||A?(t&&(r.ZONE=t),e&&(r.VUE_CARTE=e),A&&(r.ALTITUDE=A)):r.BASE_COMPLETE="oui";const E=await this.aerofetch("CARTES",r);return this.flattenMaps(E)}async DOSSIER(t){return await this.aerofetch("DOSSIER",{DESTINATION:t})}async SW(){return await this.aerofetch("SW",{})}async VALIDATION(t){return"OK"==(await this.aerofetch("VALIDATION",{CODE_METEO:t})).validation.resultat}async aerofetch(t,e){let A=new URL(this.url);A.search=new URLSearchParams({ID:this.key,TYPE_DONNEES:t,...e});let r=new Request(A);this.prefetch&&(r=this.prefetch(r));const E=await fetch(r);if(E.ok){const t=await E.text(),e=this.parser(t);if(e.ERREUR)return{};if(e.acces&&e.acces.code)throw new Error("Aeroweb: login unknown");return this.sanitizeAttributes.call(this,e)}throw{code:E.status,message:E.statusText}}prepareCodes(t){return{LIEUID:t.join("|")}}sanitizeAttributes(t){for(const e in t)t[e]._attributes&&(t[e]={...t[e],...t[e]._attributes},delete t[e]._attributes),t[e]._text&&(t[e]=t[e]._text),t[e]._cdata&&(t[e]=t[e]._cdata),"lien"==e&&(t[e]=new URL(t[e],this.url)),t[e]&&("object"==typeof t[e]||Array.isArray(t[e]))&&this.sanitizeAttributes(t[e]);return t}sanitizeStations(t){return[t].flat().map((t=>{let e={messages:[]};for(const A in t)["nom","oaci"].includes(A)?e[A]=t[A]:"NODATA"!=t[A]&&e.messages.push(t[A]);return e.messages=e.messages.flat(),e}))}groupByMessage(t){return t.groupe?[t.groupe.messages].flat().map((function(t){return{oaci:t.oaci,nom:t.nom,...this.groupBy([t.message].flat(),"type",(t=>t.texte))}})):t}flattenMaps(t){return t.cartes?[t.cartes.bloc_zone].flat().flatMap((t=>t.carte)).filter(Boolean):t}extractZones(t){return t.cartes.bloc_zone.map((t=>({id:t.idz,name:t.nom})))}extractMaps(t){let e=this.groupBy(t.cartes.bloc_zone,"idz",(t=>t.carte));for(const t in e){e[t]=e[t].flat(),e[t]=this.groupBy(e[t],"type",(t=>t.niveau));for(const A in e[t])e[t][A]=[...new Set(e[t][A])]}return e}groupBy(t,e,A){return t.reduce((function(t,r){return r&&(t[r[e]]=t[r[e]]||[]).push(A.call(null,r)),t}),{})}static get VAA(){return{PAWU:"Anchorage",ADRM:"Darwin",EGRR:"London",CWAO:"Montreal",RJTD:"Tokyo",LFPW:"Toulouse",KNES:"Washington",SABM:"Buenos Aires",NZKL:"Wellington"}}static get VAG(){return{PAWU:"Anchorage",ADRM:"Darwin",EGRR:"London",CWAO:"Montreal",RJTD:"Tokyo",LFPW:"Toulouse",KNES:"Washington"}}static get TCA(){return{FMEE:"La Réunion",KNHC:"Miami",RJTD:"Tokyo",PHFO:"Honolulu",VIDP:"New Delhi",NFFN:"Nadi",ADRM:"Darwin"}}static get TCAG(){return{FMEE:"La Réunion"}}static get PREDEC(){return{LFPG:"CDG",LFPO:"Orly",SOCA:"Cayenne",TFFF:"Fort de France",TFFR:"Pointe à pitre",FMEE:"Saint Denis",NWWW:"Nouméa",NTAA:"Tahiti"}}static get CARTES(){return{zones:{AERO_FRANCE:"FRANCE",AERO_EUROC:"EUROC",AERO_EUR:"EUR",AERO_ANTILLES:"ANTILLES",AERO_ANTIL_GUY:"ANTILLES GUYANE",AERO_DIRAG_ATL:"ANTILLES-GUYANE-AMERIQUES",AERO_ATLANTIQUE:"ANTILLES-GUYANE-ATLANTIQUE",AERO_GUYANE:"GUYANE",AERO_MASCAREIG:"MASCAREIGNES","AERO_DIRNC-AUSTRALIE":"NOUVELLE_CALEDONIE-AUSTRALIE",AERO_JAPON:"NOUVELLE_CALEDONIE-JAPON",AERO_MAGENTA:"NOUVELLE_CALEDONIE-MAGENTA",AERO_NANDI_WALLIS:"NOUVELLE_CALEDONIE-NANDI_WALLIS",AERO_NORFOLK:"NOUVELLE_CALEDONIE-NORFOLK",AERO_NOUVELLE_ZELANDE:"NOUVELLE_CALEDONIE-NOUVELLE_ZELANDE",AERO_SAIPAN:"NOUVELLE_CALEDONIE-SAIPAN",AERO_TAHITI:"NOUVELLE_CALEDONIE-TAHITI",AERO_WALLIS:"NOUVELLE_CALEDONIE-WALLIS",AERO_PAC_EST:"PACIFIQUE EST",AERO_PAC_OUEST:"PACIFIQUE OUEST",AERO_POLYNESIE:"POLYNESIE","AERO_TAHITI-HAWAI-JAPON":"TAHITI-HAWAI-JAPON","AERO_TAHITI-EASTER_ISLAND-CHILI":"TAHITI-EASTER_ISLAND-CHILI","AERO_TAHITI-POLYNESIE-FRANCAISE":"TAHITI-POLYNESIE-FRANCAISE",AERO_AUSTRALIE:"AUSTRALIE",AERO_EURASIA:"ASIA (D)",AERO_ASIA_SOUTH:"ASIA SOUTH",AERO_MEA:"ASIA SOUTH_MID",AERO_EURAFI:"EURAFI C",AERO_EURSAM_B:"EURSAM B",AERO_EURSAM_B1:"EURSAM B1",AERO_INDOC:"INDOC E",AERO_MID:"MID G",AERO_AMERIQUES:"NAMSAM A",AERO_NORTH_ATL:"NAT",AERO_NAT:"NAT H",AERO_NATsecour:"NAT H Secours",AERO_NORTH_PAC:"NORTH PACIFIC M",AERO_PACIF:"PACIF I",AERO_PACIFIC:"PACIFIC F",AERO_SIO:"SIO K",AERO_SOUTH_POL:"SOUTH POLAR J"},types:{AERO_TEMSI:"Temps Significatif",AERO_WINTEM:"Vent & Température"},altitudes:[20,50,80,100,140,180,210,240,270,300,320,340,360,390,410,450,480,530]}}}}},e={};function A(r){if(e[r])return e[r].exports;var E=e[r]={exports:{}};return t[r](E,E.exports,A),E.exports}return A.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return A.d(e,{a:e}),e},A.d=(t,e)=>{for(var r in e)A.o(e,r)&&!A.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},A.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),A.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},A(544)})();